services:
  minio:
    image: minio/minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      # Credentials for Minio users (to be created by mc)
      POLARIS_S3_USER: ${POLARIS_S3_USER:-polaris_s3_user}
      POLARIS_S3_PASSWORD: ${POLARIS_S3_PASSWORD:-polaris_s3_password_val} # Changed default
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - minio_network

  mc:
    depends_on:
      minio:
        condition: service_healthy
    image: minio/mc
    volumes:
      - ./minio-config:/config
    networks:
      - minio_network
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      POLARIS_S3_USER: ${POLARIS_S3_USER:-polaris_s3_user}
      POLARIS_S3_PASSWORD: ${POLARIS_S3_PASSWORD:-polaris_s3_password_val}
    entrypoint: /bin/sh
    command: /config/setup-minio.sh

  polaris:
    image: alexmerced/polaris1126
    # platform: linux/arm64/v8
    ports:
      - "8181:8181"
      - "8182:8182"
    environment:
      - AWS_REGION=$AWS_REGION
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_ENDPOINT_URL=http://minio:9000
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - AWS_SDK_S3_FORCE_PATH_STYLE=true
    volumes:
      - ./polaris-server.yaml:/app/polaris-server.yml
    command:
      - server
      - polaris-server.yml
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - minio_network


networks:
  minio_network:
    driver: bridge

volumes:
  minio_data:
